{"version":3,"file":"static/js/758.430a6c5f.chunk.js","mappings":"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","sources":["Fjendulum.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Sketch from 'react-p5';\n\nconst Pendulum = ({ mass, springConstant }) => {\n  const MAX_TRAIL_LENGTH = 100;\n\n  const [angle, setAngle] = useState(Math.PI / 4);\n  const [angleVelocity, setAngleVelocity] = useState(-0.5);\n  const [angleAcceleration, setAngleAcceleration] = useState(0);\n  const [length, setLength] = useState(25);\n  const [lengthVelocity, setLengthVelocity] = useState(0);\n  const [lengthAcceleration, setLengthAcceleration] = useState(0);\n  const [trail, setTrail] = useState([]);\n\n  const restLength = 50;\n  const gravity = 10;\n  const Damping = 1;\n\n  // Effect to update internal state when mass or springConstant changes\n  useEffect(() => {\n    // Reset the simulation whenever mass or spring constant changes\n    setAngle(Math.PI / 4);\n    setAngleVelocity(0);\n    setAngleAcceleration(0);\n    setLength(25);\n    setLengthVelocity(0);\n    setLengthAcceleration(0);\n    setTrail([]);\n  }, [mass, springConstant]);\n\n  const setup = (p5, parentRef) => {\n    p5.createCanvas(300, 400).parent(parentRef);\n    p5.frameRate(30);\n  };\n\n  const draw = (p5) => {\n    p5.clear();\n    p5.background(255, 0);\n    p5.translate(0, 50);\n\n    let newAngleAcceleration = -(gravity / (restLength + length)) * Math.sin(angle) \n      - (2 * lengthVelocity / (restLength + length)) * angleVelocity;\n    let newAngleVelocity = angleVelocity + newAngleAcceleration;\n    newAngleVelocity *= Damping;\n    let newAngle = angle + newAngleVelocity;\n\n    let newLengthAcceleration = (restLength + length) * newAngleVelocity ** 2 \n      - (springConstant / mass) * (length - restLength) + gravity * Math.cos(newAngle);\n    let newLengthVelocity = lengthVelocity + newLengthAcceleration;\n    newLengthVelocity *= Damping;\n    let newLength = length + newLengthVelocity;\n\n    const foregroundColor = getComputedStyle(document.documentElement).getPropertyValue('--foreground-rgb');\n    const ceilingColor = p5.color(...foregroundColor.split(',').map(Number));\n    const trailColor = p5.color(200, 200, 200);\n\n    p5.stroke(ceilingColor);\n    p5.strokeWeight(3);\n    p5.line(p5.width / 3, 20, p5.width - p5.width / 3, 20);\n    \n    p5.strokeWeight(1.5);\n    for (let i = p5.width / 3; i < p5.width - p5.width / 3; i += 30) {\n      p5.line(i, 20, i + 20, 0);\n    }\n\n    const x = newLength * Math.sin(newAngle);\n    const y = newLength * Math.cos(newAngle);\n\n    const newTrail = [...trail, { x: x + p5.width / 2, y: y + 20, timestamp: p5.frameCount }];\n\n    for (let i = 0; i < newTrail.length - 1; i++) {\n      const pos = newTrail[i];\n      const alpha = p5.map(p5.frameCount - pos.timestamp, 0, MAX_TRAIL_LENGTH, 255, 0);\n      const adjustedAlpha = alpha < 0 ? 0 : alpha;\n\n      p5.stroke(trailColor.levels[0], trailColor.levels[1], trailColor.levels[2], adjustedAlpha);\n      p5.strokeWeight(2);\n      p5.line(pos.x, pos.y, newTrail[i + 1].x, newTrail[i + 1].y);\n    }\n\n    if (newTrail.length > MAX_TRAIL_LENGTH) {\n      newTrail.shift();\n    }\n\n    p5.stroke(ceilingColor);\n    p5.strokeWeight(1.5);\n    p5.line(0 + p5.width / 2, 20, x + p5.width / 2, y + 20);\n    \n    p5.fill(199, 37, 62);\n    p5.ellipse(x + p5.width / 2, y + 20, 20, 20);\n\n    setAngle(newAngle);\n    setAngleVelocity(newAngleVelocity);\n    setAngleAcceleration(newAngleAcceleration);\n    setLength(newLength);\n    setLengthVelocity(newLengthVelocity);\n    setLengthAcceleration(newLengthAcceleration);\n    setTrail(newTrail);\n  };\n\n  const resetSimulation = () => {\n    setAngle(Math.PI / 4);\n    setAngleVelocity(0);\n    setAngleAcceleration(0);\n    setLength(25);\n    setLengthVelocity(0);\n    setLengthAcceleration(0);\n    setTrail([]);\n  };\n\n  return (\n    <div className=\"-translate-x-6 flex flex-col justify-center items-center noselect\">\n      <div className=\"w-full\">\n        <Sketch setup={setup} draw={draw} />\n        <button \n          className=\"absolute top-[45px] right-[55px] text-2xl\" \n          onClick={resetSimulation}\n          style={{ color: 'var(--foreground-rgb)' }}\n        >\n          ‚ü≤\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Pendulum;\n"],"names":["_ref","mass","springConstant","angle","setAngle","useState","Math","PI","angleVelocity","setAngleVelocity","angleAcceleration","setAngleAcceleration","length","setLength","lengthVelocity","setLengthVelocity","lengthAcceleration","setLengthAcceleration","trail","setTrail","useEffect","_jsx","className","children","_jsxs","Sketch","setup","p5","parentRef","createCanvas","parent","frameRate","draw","clear","background","translate","newAngleAcceleration","sin","newAngleVelocity","newAngle","newLengthAcceleration","cos","newLengthVelocity","newLength","foregroundColor","getComputedStyle","document","documentElement","getPropertyValue","ceilingColor","color","split","map","Number","trailColor","stroke","strokeWeight","line","width","i","x","y","newTrail","timestamp","frameCount","pos","alpha","adjustedAlpha","levels","shift","fill","ellipse","onClick","resetSimulation","style"],"sourceRoot":""}